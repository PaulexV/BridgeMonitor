#pragma checksum "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e664fc556f295d2cac474c50ae2c6fb31a5e7eae"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/_ViewImports.cshtml"
using PontChaban;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/_ViewImports.cshtml"
using PontChaban.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
using System.Globalization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e664fc556f295d2cac474c50ae2c6fb31a5e7eae", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa377157aa6c922b6e93fde37e0cb9590669c0cd", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<BridgeInfos>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<h1>Prochaine Fermeture</h1>

<table class=""table"">
    <thead>
        <tr>
            <th>Cause / Bateau</th>
            <th>Date de la fermeture</th>
            <th>Heure de réouverture</th>
            <th>Durée de la prochaine fermeture</th>
            <th>Décompte</th>
            <th>Risque de bouchons</th>
        </tr>
    </thead>
    <tbody>
");
#nullable restore
#line 18 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
         foreach (var boat in Model)
        {
            var duree = boat.ReopeningDate - boat.ClosingDate;

            if (DateTime.Now < boat.ClosingDate)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <tr>\r\n                    <td>");
#nullable restore
#line 25 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
                   Write(boat.BoatName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 26 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
                   Write(boat.ClosingDate.ToString("F", CultureInfo.CreateSpecificCulture("fr-FR")));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 27 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
                   Write(boat.ReopeningDate.ToString("F", CultureInfo.CreateSpecificCulture("fr-FR")));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 28 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
                   Write(duree);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>\r\n                        <div id=\"countdown\"></div>\r\n                        <p id=\"nextclose\" style=\"display: none;\">");
#nullable restore
#line 31 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
                                                            Write(boat.ClosingDate.ToString("o"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</p>
                        <script>
                            var countDownDate = new Date(document.getElementById(""nextclose"").innerHTML).getTime()
                            var x = setInterval(function () {
                                var now = new Date().getTime();
                                var distance = countDownDate - now;
                                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                                var seconds = Math.floor((distance % (1000 * 60)) / 1000);
                                document.getElementById(""countdown"").innerHTML = ""Encore "" + days + "" jour(s), "" + hours + "" heure(s) ""
                                    + minutes + "" minutes et "" + seconds + "" secondes avant la prochaine fermeture"";
                  ");
            WriteLiteral("          }, 1000);\r\n                        </script>\r\n                    </td>\r\n");
#nullable restore
#line 46 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
                     if ((7 <= boat.ClosingDate.Hour & boat.ClosingDate.Hour <= 9) | (17 <= boat.ClosingDate.Hour &
            boat.ClosingDate.Hour <= 19))
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <td>Elevé</td>\r\n");
#nullable restore
#line 50 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
                    }
                    else
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <td>Faible</td>\r\n");
#nullable restore
#line 54 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </tr>\r\n");
#nullable restore
#line 56 "/home/paulex/Ynov/dotNET/BridgeMonitor/Views/Home/Index.cshtml"
                break;
            }
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("    </tbody>\r\n</table>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<BridgeInfos>> Html { get; private set; }
    }
}
#pragma warning restore 1591
